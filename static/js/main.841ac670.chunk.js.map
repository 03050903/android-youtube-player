{"version":3,"sources":["assets/android-youtube-player_300px.webp","serviceWorker.js","components/navbar/Navbar.js","components/header/Header.js","components/sections/gh-buttons/GhButtons.js","components/sections/whatIsIt/WhatIsIt.js","components/sections/differences/Differences.js","components/sections/download/Download.js","components/sections/gettingStarted/GettingStarted.js","components/sections/sampleApps/SampleApps.js","components/sections/Sections.js","components/footer/Footer.js","components/App.js","index.js","assets/android-youtube-player_300px.png"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","addEventListener","handleScroll","componentWillUnmount","removeEventListener","event","currentScroll","undefined","pageYOffset","document","documentElement","body","parentNode","scrollTop","setState","render","navBarClass","state","navBarItemClass","react_default","a","createElement","className","src","name","map","item","idx","key","href","target","rel","Component","Header","mousePosition","x","y","currentOffset","onMouseMove","_ref","screenX","screenY","canvas","width","height","resizeCanvas","style","offsetWidth","offsetHeight","draw","time","offsetSlow","Math","sin","offsetFast","context","getContext","fillStyle","beginPath","arc","PI","fill","updateCanvas","requestAnimationFrame","_this2","onresize","onmousemove","_this3","ref","element","srcset","logo","type","logo_fallback_png","alt","GhButtons","data-icon","data-size","data-show-count","aria-label","WhatIsIt","Differences","Download","default_highlight","language","agate","GettingStarted","SampleApps","buttons","text","store","github","marginRight","viewBox","d","Sections","sections_gh_buttons_GhButtons","sections_whatIsIt_WhatIsIt","sections_differences_Differences","sections_download_Download","sections_gettingStarted_GettingStarted","sections_sampleApps_SampleApps","Footer","ReactGA","initialize","pageview","pathname","search","App","components_navbar_Navbar","Header_Header","components_sections_Sections","components_footer_Footer","ReactDOM","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qXCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4GC+BSC,cA3CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKVQ,kBAAoB,WAChBb,OAAOc,iBAAiB,SAAUR,EAAKS,eAPxBT,EAUnBU,qBAAuB,WACnBhB,OAAOiB,oBAAoB,SAAUX,EAAKS,eAX3BT,EAcnBS,aAAe,SAAAG,GACX,IAAMC,OAlB+CC,IAAvBpB,OAAOqB,YAA6BrB,OAAOqB,aAAeC,SAASC,iBAAmBD,SAASE,KAAKC,YAAcH,SAASE,MAAME,UAmB/JpB,EAAKqB,SAAS,CAAER,mBAhBDb,EAmBnBsB,OAAS,WAEL,IAAMC,EAA2C,IAA7BvB,EAAKwB,MAAMX,cAAsB,GAAK,kBACpDY,EAA+C,IAA7BzB,EAAKwB,MAAMX,cAAsB,GAAK,yBAS9D,OACIa,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBAAsBN,GARtB,CAChB,CAACO,IAAK,0FAA2FC,KAAM,QACvG,CAACD,IAAK,0EAA2EC,KAAM,WACvF,CAACD,IAAK,mEAAoEC,KAAM,WAM/DC,IAAK,SAACC,EAAMC,GAAP,OACdR,EAAAC,EAAAC,cAAA,KAAGO,IAAKD,EAAKL,UAAU,8BAA8BO,KAAMH,EAAKH,IAAKO,OAAO,SAASC,IAAI,uBACrFZ,EAAAC,EAAAC,cAAA,UAAQC,UAAW,iCAAkCJ,GAAkBQ,EAAKF,WAhC5F/B,EAAKwB,MAAQ,CAAEX,cAAe,GAHfb,6BADFuC,8CCAAC,oNAEjBC,cAAgB,CAAEC,EAAG,EAAGC,EAAG,KAC3BC,cAAgB,CAAEF,EAAG,EAAGC,EAAG,KAU3BE,YAAc,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,QACrBhD,EAAKyC,cAAcC,EAAIK,EAAQ/C,EAAKiD,OAAOC,MAAM,EACjDlD,EAAKyC,cAAcE,EAAIK,EAAQhD,EAAKiD,OAAOE,OAAO,KAGtDC,aAAe,SAACH,GACZA,EAAOI,MAAMH,MAAQ,OACrBD,EAAOI,MAAMF,OAAQ,OAErBF,EAAOC,MAASD,EAAOK,YACvBL,EAAOE,OAASF,EAAOM,gBAG3BC,KAAO,SAACP,EAAQQ,GACZ,IAAMC,EAAgC,GAAnBC,KAAKC,IAAIH,EAAK,KAC3BI,EAAiC,GAApBF,KAAKC,IAAIH,EAAK,MAEjCzD,EAAK4C,cAAcF,GAAiE,KAAjC,IAAvB1C,EAAKyC,cAAcC,EAAY1C,EAAK4C,cAAcF,GAC9E1C,EAAK4C,cAAcD,GAAiE,MAAjC,IAAvB3C,EAAKyC,cAAcE,EAAY3C,EAAK4C,cAAcD,GAE9E,IAAMmB,EAAUb,EAAOc,WAAW,MAClCD,EAAQE,UAAY,UACpBF,EAAQG,YACRH,EAAQI,IAAIjB,EAAOC,MAAM,EAAGD,EAAOE,OAAO,EAAGF,EAAOC,MAAMQ,EAAY,EAAG,EAAIC,KAAKQ,IAClFL,EAAQM,OAERN,EAAQE,UAAY,UACpBF,EAAQG,YACRH,EAAQI,IAAIjB,EAAOC,MAAM,EAAwB,GAArBlD,EAAK4C,cAAcF,EAAOO,EAAOE,OAAO,EAAwB,GAArBnD,EAAK4C,cAAcD,EAAOM,EAAOC,MAAM,IAAKQ,EAAY,EAAG,EAAIC,KAAKQ,IAC3IL,EAAQM,OAERN,EAAQE,UAAY,UACpBF,EAAQG,YACRH,EAAQI,IAAIjB,EAAOC,MAAM,EAAIlD,EAAK4C,cAAcF,EAAGO,EAAOE,OAAO,EAAGnD,EAAK4C,cAAcD,EAAGM,EAAOC,MAAM,EAAGW,EAAY,EAAG,EAAIF,KAAKQ,IAClIL,EAAQM,UAGZC,aAAe,SAAAZ,GACXa,sBAAsBtE,EAAKqE,cAC3BrE,EAAKwD,KAAKxD,EAAKiD,OAAQQ,uFA/CP,IAAAc,EAAApE,KACV8C,EAAS9C,KAAK8C,OACpBvD,OAAO8E,SAAW,kBAAMD,EAAKnB,aAAaH,IAC1CvD,OAAO+E,YAActE,KAAK0C,YAC1B1C,KAAKiD,aAAaH,GAClB9C,KAAKkE,gDA6CC,IAAAK,EAAAvE,KACN,OACIuB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAEdH,EAAAC,EAAAC,cAAA,UAAQ+C,IAAK,SAAAC,GAAO,OAAIF,EAAKzB,OAAS2B,GAAS/C,UAAU,iCAEzDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACfH,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,UAAQiD,OAAQC,IAAMC,KAAK,eAC3BrD,EAAAC,EAAAC,cAAA,UAAQiD,OAAQG,IAAmBD,KAAK,cACxCrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKkD,IAAmBC,IAAI,UAGtDvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAAf,wFApEgBU,cCQrB2C,SAVG,WACd,OACIxD,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBO,KAAK,mEAAmE+C,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,gEAAlL,QADJ,WAEgB5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBO,KAAK,wEAAwE+C,YAAU,sBAAsBC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,gEAA9L,QAFhB,WAGgB5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBO,KAAK,4CAA4CgD,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,4CAAlI,qCCUTC,SAfE,WACb,OACI7D,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,kLACmLH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WADxL,iDAEkDF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,6DAA6DC,OAAO,SAASC,IAAI,uBAAzF,qBAFlD,yFAE4QZ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAFjR,2KAG4KF,EAAAC,EAAAC,cAAA,WAH5K,8CAI+CF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,sFAAsFC,OAAO,SAASC,IAAI,uBAAlH,iCAJ/C,uCAI4PZ,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,6FAA6FC,OAAO,SAASC,IAAI,uBAAzH,sCAJ5P,IAIkbZ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAJvb,gCAKiCF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,gGAAgGC,OAAO,SAASC,IAAI,uBAA5H,uCALjC,4FCUGkD,SAdK,WAChB,OACI9D,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,qCACAH,EAAAC,EAAAC,cAAA,oIAC0HF,EAAAC,EAAAC,cAAA,WAD1H,kDAEmDF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,kDAAkDC,OAAO,SAASC,IAAI,uBAA9E,8BAFnD,gHAEkSZ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAFvS,4IAG6IF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAHlJ,6HAI8HF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,0GAA0GC,OAAO,SAASC,IAAI,uBAAtI,uBAJ9H,wBC6BGmD,SA/BE,WACb,OACI/D,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,YACAH,EAAAC,EAAAC,cAAA,qDAC2BF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAA/E,WAD3B,IAEZZ,EAAAC,EAAAC,cAAA,WAFY,mLAIZF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAJO,OAMRF,EAAAC,EAAAC,cAAA,iBANQ,uEAQZF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAmBC,SAAS,SAAStC,MAAQuC,SAA7C,iHARY,OAcRlE,EAAAC,EAAAC,cAAA,8BAdQ,iIAgBZF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAmBC,SAAS,SAAStC,MAAQuC,SAA7C,kIC4CeC,UA/DQ,WACnB,OACInE,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,mBACAH,EAAAC,EAAAC,cAAA,oGAIZF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAmBC,SAAS,MAAMtC,MAAQuC,SAA1C,2kBAJY,qHAwBsGlE,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,qFAAqFC,OAAO,SAASC,IAAI,uBAAjH,iCAxBtG,IA0BZZ,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAmBC,SAAS,OAAOtC,MAAQuC,SAA3C,iIAKAlE,EAAAC,EAAAC,cAAA,uHAA8GF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,yDAAyDC,OAAO,SAASC,IAAI,uBAArF,2CAA9G,KACAZ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAhCO,mEAkCZF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAlCO,+JAqCZF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAmBC,SAAS,OAAOtC,MAAQuC,SAA3C,0XArCY,WAkDJlE,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,0FAA0FC,OAAO,SAASC,IAAI,uBAAtH,wCAlDI,IAmDZZ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAnDO,iCAoDkBF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,0EAA0EC,OAAO,SAASC,IAAI,uBAAtG,2BApDlB,QC8BGwD,UArCI,WAEf,IAAMC,EAAU,CACZ,CAAEC,KAAM,kBAAmBC,MAAO,2FAA4FC,OAAQ,gGACtI,CAAEF,KAAM,wBAAyBC,MAAO,0FAA2FC,OAAQ,8GAG/I,OACIxE,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,eACAH,EAAAC,EAAAC,cAAA,8HAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACTkE,EAAQ/D,IAAK,SAACC,EAAMC,GAAP,OACXR,EAAAC,EAAAC,cAAA,KAAGO,IAAKD,EAAKL,UAAU,oBAAoBO,KAAMH,EAAKgE,MAAO5D,OAAO,SAASC,IAAI,uBAC7EZ,EAAAC,EAAAC,cAAA,OAAKyB,MAAQ,CAACH,MAAM,OAAQC,OAAO,OAAQgD,YAAa,OAAStE,UAAU,kBAAkBuE,QAAQ,aACjG1E,EAAAC,EAAAC,cAAA,QAAMyE,EAAE,2SAEZ3E,EAAAC,EAAAC,cAAA,YAAOK,EAAK+D,UAIxBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACTkE,EAAQ/D,IAAK,SAACC,EAAMC,GAAP,OACXR,EAAAC,EAAAC,cAAA,KAAGO,IAAKD,EAAKL,UAAU,oBAAoBO,KAAMH,EAAKiE,OAAQ7D,OAAO,SAASC,IAAI,uBAC9EZ,EAAAC,EAAAC,cAAA,OAAKyB,MAAQ,CAACH,MAAM,OAAQC,OAAO,OAAQgD,YAAa,OAAStE,UAAU,kBAAkBuE,QAAQ,aACjG1E,EAAAC,EAAAC,cAAA,QAAMyE,EAAE,ivBAEZ3E,EAAAC,EAAAC,cAAA,YAAOK,EAAK+D,aCVrBM,UAbE,WACb,OACI5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WAASC,UAAU,0BAAyBH,EAAAC,EAAAC,cAAC2E,EAAD,OAC5C7E,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAAcH,EAAAC,EAAAC,cAAC4E,EAAD,OACjC9E,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAAcH,EAAAC,EAAAC,cAAC6E,EAAD,OACjC/E,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAAcH,EAAAC,EAAAC,cAAC8E,EAAD,OACjChF,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAAcH,EAAAC,EAAAC,cAAC+E,EAAD,OACjCjF,EAAAC,EAAAC,cAAA,WAASC,UAAU,oBAAmBH,EAAAC,EAAAC,cAACgF,EAAD,UCNnCC,UARA,WACX,OACInF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,sCAAsCC,OAAO,SAASC,IAAI,uBAAlE,gDCE1BwE,IAAQC,WAAW,iBACnBD,IAAQE,SAAStH,OAAOC,SAASsH,SAAWvH,OAAOC,SAASuH,YAe7CC,mLAXX,OACEzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACwF,EAAD,MACA1F,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAC0F,EAAD,MACA5F,EAAAC,EAAAC,cAAC2F,EAAD,cAPUhF,aCLlBiF,IAASlG,OAAOI,EAAAC,EAAAC,cAAC6F,EAAD,MAASzG,SAAS0G,eAAe,SZ2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iGanInB3I,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.841ac670.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/android-youtube-player_300px.9f66fcf4.webp\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport \"./Navbar.css\"\r\n\r\nfunction getCurrentScroll() { return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop }\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { currentScroll: 0 }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    \r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    \r\n    handleScroll = event => {\r\n        const currentScroll = getCurrentScroll()\r\n        this.setState({ currentScroll });\r\n    }\r\n\r\n    render = () => {\r\n        \r\n        const navBarClass = this.state.currentScroll === 0 ? \"\" : \"navbar-elevated\";\r\n        const navBarItemClass = this.state.currentScroll === 0 ? \"\" : \"navbar-button-elevated\";\r\n\r\n        const navBarItems = [\r\n            {src: \"https://github.com/PierfrancescoSoffritti/android-youtube-player#table-of-contents-core\", name: \"Docs\"},\r\n            {src: \"https://github.com/PierfrancescoSoffritti/android-youtube-player/issues\", name: \"Support\"},\r\n            {src: \"https://github.com/PierfrancescoSoffritti/android-youtube-player\", name: \"GitHub\"},\r\n            \r\n        ]\r\n\r\n        return (\r\n            <nav className={\"navbar navbar-dim \" +navBarClass}>\r\n                {navBarItems.map( (item, idx) => \r\n                    <a key={idx} className=\"navbar-link navbar-item-dim\" href={item.src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <button className={\"navbar-button navbar-item-dim \" +navBarItemClass}>{item.name}</button>\r\n                    </a>\r\n                )}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport logo from '../../assets/android-youtube-player_300px.webp'\r\nimport logo_fallback_png from '../../assets/android-youtube-player_300px.png'\r\nimport \"./Header.css\"\r\n\r\nexport default class Header extends Component {\r\n\r\n    mousePosition = { x: 0, y: 0 }\r\n    currentOffset = { x: 0, y: 0 }\r\n\r\n    componentDidMount() {\r\n        const canvas = this.canvas\r\n        window.onresize = () => this.resizeCanvas(canvas)\r\n        window.onmousemove = this.onMouseMove\r\n        this.resizeCanvas(canvas)\r\n        this.updateCanvas()\r\n    }\r\n\r\n    onMouseMove = ({screenX, screenY}) => {\r\n        this.mousePosition.x = screenX-this.canvas.width/2\r\n        this.mousePosition.y = screenY-this.canvas.height/2\r\n    }\r\n\r\n    resizeCanvas = (canvas) => {\r\n        canvas.style.width = '100%';\r\n        canvas.style.height= '100%';\r\n        \r\n        canvas.width  = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n    }\r\n\r\n    draw = (canvas, time) => {\r\n        const offsetSlow = Math.sin(time/820)*10\r\n        const offsetFast = Math.sin(time/1200)*15\r\n\r\n        this.currentOffset.x += (  (this.mousePosition.x * 0.06) - this.currentOffset.x ) * 0.01;\r\n        this.currentOffset.y += ( -(this.mousePosition.y * 0.06) - this.currentOffset.y ) * 0.01;\r\n\r\n        const context = canvas.getContext(\"2d\");\r\n        context.fillStyle = '#ef5451';\r\n        context.beginPath();\r\n        context.arc(canvas.width/2, canvas.height/2, canvas.width+offsetSlow, 0, 2 * Math.PI);\r\n        context.fill()\r\n\r\n        context.fillStyle = '#e57373';\r\n        context.beginPath();\r\n        context.arc(canvas.width/2 +this.currentOffset.x*0.5, canvas.height/2 +this.currentOffset.y*0.5, canvas.width/2.5 +offsetSlow, 0, 2 * Math.PI);\r\n        context.fill()\r\n\r\n        context.fillStyle = '#ef9a9b';\r\n        context.beginPath();\r\n        context.arc(canvas.width/2 + this.currentOffset.x, canvas.height/2 +this.currentOffset.y, canvas.width/4 +offsetFast, 0, 2 * Math.PI);\r\n        context.fill()\r\n    }\r\n\r\n    updateCanvas = time => {\r\n        requestAnimationFrame(this.updateCanvas);\r\n        this.draw(this.canvas, time);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <header className=\"header header-dim\">\r\n\r\n                <canvas ref={element => this.canvas = element} className=\"header-background header-dim\" />\r\n\r\n                <div className=\"header-conten header-conten-dim\">\r\n                <picture>\r\n                    <source srcset={logo} type=\"image/webp\" />\r\n                    <source srcset={logo_fallback_png} type=\"image/png\" />\r\n                    <img className=\"logo-dim\" src={logo_fallback_png} alt=\"logo\" />\r\n                </picture>\r\n                    \r\n                    <div className=\"description description-dim\">YouTube Player library for Android and Chromecast, stable and customizable.</div>\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./GhButtons.css\"\r\n\r\nconst GhButtons = () => {\r\n    return (\r\n        <section>\r\n            <a className=\"github-button\" href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star PierfrancescoSoffritti/android-youtube-player on GitHub\">Star</a>\r\n            &nbsp;&nbsp;<a className=\"github-button\" href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player/fork\" data-icon=\"octicon-repo-forked\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Fork PierfrancescoSoffritti/android-youtube-player on GitHub\">Fork</a>\r\n            &nbsp;&nbsp;<a className=\"github-button\" href=\"https://github.com/PierfrancescoSoffritti\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Follow @PierfrancescoSoffritti on GitHub\">Follow @PierfrancescoSoffritti</a>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default GhButtons","import React from 'react';\r\nimport \"./WhatIsIt.css\"\r\n\r\nconst WhatIsIt = () => {\r\n    return (\r\n        <section>\r\n            <div className=\"section-title\">What is it</div>\r\n            <div className=\"text\">\r\n                android-youtube-player is a stable and customizable open source YouTube player for Android. It provides a simple View that can be easily integrated in every Activity/Fragment.<br/><br/>\r\n                To interact with YouTube the library uses the <a href=\"https://developers.google.com/youtube/iframe_api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">IFrame Player API</a>, inside of a WebView, therefore the YouTube app is not required on the user's device.<br/><br/>\r\n                The web UI of the IFrame Player is hidden. Instead, a native UI built on top of Android is used to interact with the player, providing a native experience to the users.<br/>\r\n                The UI of the player is 100% customizable. <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player#playeruicontroller\" target=\"_blank\" rel=\"noopener noreferrer\">The default UI can be changed</a>, to show and hide views, or can be <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player#create-your-own-custom-ui\" target=\"_blank\" rel=\"noopener noreferrer\">completely replaced by a custom UI</a>.<br/><br/>\r\n                This library also provides a <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player#chromecast-extension-library\" target=\"_blank\" rel=\"noopener noreferrer\">Chromecast YouTube player extension</a>, that can be used to cast YouTube videos from an Android app to a Chromecast device.\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WhatIsIt","import React from 'react';\r\nimport \"./Differences.css\"\r\n\r\nconst Differences = () => {\r\n    return (\r\n        <section>\r\n            <div className=\"section-title\">Differences from the official API</div>\r\n            <div>\r\n                The official library provided by Google to integrate YouTube videos in Android apps is the YouTube Android Player API.<br/>\r\n                The YouTube Android Player API is quite buggy (<a href=\"https://issuetracker.google.com/issues/35172585\" target=\"_blank\" rel=\"noopener noreferrer\">some bugs are 5+ years old</a>) and lacking in support from Google. I found it to be quite unreliable and therefore unusable in production.<br/><br/>\r\n                This, added to its limited options for customization and lack of Chromecast support, lead to the development of this open source library.<br/><br/>\r\n                A lengthier explanation about why you may want to consider using an alternative to the official YouTube player is written <a href=\"https://medium.com/@soffritti.pierfrancesco/how-to-play-youtube-videos-in-your-android-app-c40427215230\" target=\"_blank\" rel=\"noopener noreferrer\">in this Medium post</a>.\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Differences","import React from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { agate  } from 'react-syntax-highlighter/dist/styles/hljs';\r\nimport \"./Download.css\";\r\n\r\nconst Download = () => {\r\n    return (\r\n        <section>\r\n            <div className=\"section-title\">Download</div>\r\n            <div>\r\nThe Gradle dependency is available via <a href=\"https://bintray.com/pierfrancescosoffritti/maven\" target=\"_blank\" rel=\"noopener noreferrer\">jCenter</a>.\r\n<br/>The minimum API level supported by this library is API 17. Also, starting from version 9 your app needs to be using the androidx libraries instead of the old support libraries.\r\n\r\n<br/><br/>\r\n\r\nThe <b>core</b> module is all you need to start playing YouTube videos in your app.\r\n\r\n<SyntaxHighlighter language='groovy' style={ agate }>{\r\n`dependencies {\r\n    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:{latest-version}'\r\n}`\r\n}</SyntaxHighlighter>\r\n\r\nThe <b>chromecast-sender</b> module is an optional extension library. Use it only if you need to cast YouTube videos from your app to a Chromecast device.\r\n\r\n<SyntaxHighlighter language='groovy' style={ agate }>{\r\n`dependencies {\r\n    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender:{latest-version}'\r\n}`\r\n}</SyntaxHighlighter>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Download","import React from 'react';\r\nimport \"./GettingStarted.css\";\r\n\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { agate  } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\nconst GettingStarted = () => {\r\n    return (\r\n        <section>\r\n            <div className=\"section-title\">Getting started</div>\r\n            <div>\r\n\r\nIn order to start using the player you need to add a YouTubePlayerView to your layout.\r\n\r\n<SyntaxHighlighter language='xml' style={ agate }>{\r\n`<LinearLayout\r\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n  android:layout_width=\"match_parent\"\r\n  android:layout_height=\"match_parent\"\r\n  android:orientation=\"vertical\" >\r\n\r\n  <com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView\r\n    android:id=\"@+id/youtube_player_view\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    \r\n    app:videoId=\"S0Q4gqBUs7c\"\r\n    app:autoPlay=\"true\"\r\n    app:showFullScreenButton=\"false\" />\r\n\r\n</LinearLayout>`\r\n}</SyntaxHighlighter>\r\n\r\nIt is recommended that you add YouTubePlayerView as a lifecycle observer of its parent Activity/Fragment. You can <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player#lifecycleobserver\" target=\"_blank\" rel=\"noopener noreferrer\">read why in the documentation</a>.\r\n\r\n<SyntaxHighlighter language='java' style={ agate }>{\r\n`YouTubePlayerView youTubePlayerView = findViewById(R.id.youtube_player_view);\r\ngetLifecycle().addObserver(youTubePlayerView);`\r\n}</SyntaxHighlighter>\r\n\r\n<i>(If you have problems adding YouTubePlayerView as a LifecycleObserver, you probably aren't using androidx, <a href=\"https://developer.android.com/jetpack/androidx/migrate\" target=\"_blank\" rel=\"noopener noreferrer\">I suggest you migrate your dependencies</a>)</i>\r\n<br/><br/>\r\nThat's all you need, a YouTube video is now playing in your app.\r\n<br/><br/>\r\nIf you want more control, everything can be done programmatically by getting a reference to your YouTubePlayerView and adding a YouTubePlayerListener to it.\r\n\r\n<SyntaxHighlighter language='java' style={ agate }>{\r\n`YouTubePlayerView youTubePlayerView = findViewById(R.id.youtube_player_view);\r\ngetLifecycle().addObserver(youTubePlayerView);\r\n\r\nyouTubePlayerView.addYouTubePlayerListener(new AbstractYouTubePlayerListener() {\r\n  @Override\r\n  public void onReady(@NonNull YouTubePlayer youTubePlayer) {\r\n    String videoId = \"S0Q4gqBUs7c\";\r\n    youTubePlayer.loadVideo(videoId, 0);\r\n  }\r\n});`\r\n}</SyntaxHighlighter>\r\n\r\nYou can <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player#table-of-contents-core\" target=\"_blank\" rel=\"noopener noreferrer\">read the complete documentation here</a>.\r\n<br/><br/>\r\nFor any question feel free to <a href=\"https://github.com/PierfrancescoSoffritti/android-youtube-player/issues\" target=\"_blank\" rel=\"noopener noreferrer\">open an issue on GitHub</a>.\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default GettingStarted","import React from 'react';\r\nimport \"./SampleApps.css\";\r\n\r\nconst SampleApps = () => {\r\n\r\n    const buttons = [ \r\n        { text: \"Core sample app\", store: \"https://play.google.com/store/apps/details?id=com.pierfrancescosoffritti.aytplayersample\", github: \"https://github.com/PierfrancescoSoffritti/android-youtube-player/tree/master/core-sample-app\" },\r\n        { text: \"Chromecast sample app\", store: \"https://play.google.com/store/apps/details?id=com.pierfrancescosoffritti.cyplayersample\", github: \"https://github.com/PierfrancescoSoffritti/android-youtube-player/tree/master/chromecast-sender-sample-app\" }\r\n    ]\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"section-title\">Sample apps</div>\r\n            <div>\r\n                You can download the sample apps from the PlayStore. The code is opensource and meant to be used as an example.\r\n            </div>\r\n            <div className=\"buttons-container\">                \r\n                { buttons.map( (item, idx) => \r\n                    <a key={idx} className=\"play-store-button\" href={item.store} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <svg style={ {width:\"32px\", height:\"32px\", marginRight: \"8px\"} } className=\"play-store-logo\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z\" />\r\n                        </svg>\r\n                        <span>{item.text}</span>\r\n                    </a>\r\n                )}                \r\n            </div>\r\n            <div className=\"buttons-container\">\r\n                { buttons.map( (item, idx) => \r\n                    <a key={idx} className=\"sample-app-button\" href={item.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <svg style={ {width:\"32px\", height:\"32px\", marginRight: \"8px\"} } className=\"sample-app-logo\" viewBox=\"0 0 24 24\">\r\n                            <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n                        </svg>\r\n                        <span>{item.text}</span>\r\n                    </a>\r\n                )}                \r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SampleApps","import React from 'react';\r\nimport GhButtons from './gh-buttons/GhButtons';\r\nimport WhatIsIt from './whatIsIt/WhatIsIt';\r\nimport Differences from './differences/Differences';\r\nimport Download from './download/Download';\r\nimport GettingStarted from './gettingStarted/GettingStarted';\r\nimport SampleApps from './sampleApps/SampleApps';\r\nimport \"./Sections.css\";\r\n\r\nconst Sections = () => {\r\n    return (\r\n        <div className=\"root-dim\">\r\n            <section className=\"gh-buttons-section-dim\"><GhButtons /></section>\r\n            <section className=\"section-dim\"><WhatIsIt /></section>\r\n            <section className=\"section-dim\"><Differences /></section>\r\n            <section className=\"section-dim\"><Download /></section>\r\n            <section className=\"section-dim\"><GettingStarted /></section>\r\n            <section className=\"last-section-dim\"><SampleApps /></section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sections","import React from 'react';\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer footer-padding\">\r\n            <span>Made by <a href=\"https://pierfrancescosoffritti.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Pierfrancesco Soffritti</a></span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Navbar from \"./navbar/Navbar\";\nimport Header from \"./header/Header\";\nimport Sections from './sections/Sections';\nimport Footer from './footer/Footer';\nimport './App.css';\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-50551684-7');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"root\">\n        <Navbar />\n        <Header />\n        <Sections />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/android-youtube-player_300px.29ca9fe6.png\";"],"sourceRoot":""}